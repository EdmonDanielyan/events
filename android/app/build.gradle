def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion 33

    compileOptions {
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled true

        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "ru.irkutskoil.portal"
        minSdkVersion 23
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    flavorDimensions "app"
    productFlavors {
        prod {
            dimension "app"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue "string", "app_name", "ИНК-Портал"
        }
        dev {
            dimension "app"
            applicationIdSuffix ".dev"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue "string", "app_name", "DEV ИНК-Портал"
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            outputFileName = "${variant.productFlavors[0].name}-${variant.buildType.name}.apk"
        }
    }

    //UNCOMMENT THIS FOR RELEASE

//         release {
//             keyAlias keystoreProperties['keyAlias']
//             keyPassword keystoreProperties['keyPassword']
//             try {
//                 storeFile file("../keystore.uu").exists() ? file("../keystore.uu"): new File(System.env.KEY_STORE)
//             } catch (Exception e) {
//                 println("please specify keystore: ${e}")
//             }
//             storePassword keystoreProperties['storePassword']
//         }
//     }

    buildTypes {

        //DEBUG
        release {
            signingConfig signingConfigs.debug
        }
        
        //UNCOMMENT THIS FOR RELEASE
//         release {
//             signingConfig signingConfigs.release
//
//             minifyEnabled true
//
//             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//         }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.work:work-runtime-ktx:2.7.0"
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'
}
